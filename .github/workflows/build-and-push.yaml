name: build-and-push
on:
  push:
    branches:
      - main
jobs:
  cargo-test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          toolchain: stable
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
      - name: test
        run: cargo test --target x86_64-unknown-linux-gnu
  cargo-build:
    name: Build cargo
    needs: cargo-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup target
        run: |
          sudo apt update
          sudo apt install gcc-aarch64-linux-gnu
          rustup target add aarch64-unknown-linux-gnu
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: cargo build
        run: cargo build --release --target aarch64-unknown-linux-gnu
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: rust_practice
          path: target/aarch64-unknown-linux-gnu/release/rust_practice
  docker-build-and-push-image:
    name: Build and Push Docker Image
    needs: cargo-build
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: rust_practice
          path: target/aarch64-unknown-linux-gnu/release
      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: 926972041025.dkr.ecr.ap-northeast-1.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push Docker image to ECR
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/arm64
          tags: 926972041025.dkr.ecr.ap-northeast-1.amazonaws.com/rust-practice:${{ github.sha }}
  pull-request:
    name: Create Pull-Request of Updating Kubernetes Manifest
    needs: docker-build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout other repo
        uses: actions/checkout@v3
        with:
          repository: UramnOIL/kubernetes_practice
          path: kubernetes_practice
      - name: edit 
        working-directory: ./kubernetes_practice
        run: |
          wget -q https://github.com/mikefarah/yq/releases/download/v4.16.2/yq_linux_386
          sudo mv yq_linux_386 /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq
          yq e -i '.spec.template.spec.containers[0].image |= "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_RESION}.amazonaws.com/rust-practice:'${CIRCLE_SHA1:0:7}'"' frontend.yaml
      - name: Login
        run: gh auth login --with-token ${{ secrets.GH_TOKEN }}
      - name: commit and create pull-request
        working-directory: ./kubernetes_practice
        run: |
          git config --global user.email "gitops@example.com"
          git config --global user.name "GitOps Bot"
          git remote set-url --push origin git@github.com:uramnoil/rust_practice.git
          git checkout -b release-${{ github.sha }}
          git add .
          git commit -m "Release circleci-demo-gitops-app ${{ github.sha }}"
          git push origin HEAD
          gh pr create --base main --title "Release rust-practice:${{ github.sha }}"